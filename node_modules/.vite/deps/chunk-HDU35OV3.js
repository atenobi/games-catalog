import {
  ReactReduxContext,
  useReduxContext
} from "./chunk-DMH75LW7.js";
import {
  require_react
} from "./chunk-LRURAHFE.js";
import {
  __toESM
} from "./chunk-ACCAMVX6.js";

// node_modules/react-redux/es/hooks/useSelector.js
var import_react = __toESM(require_react());

// node_modules/react-redux/es/utils/useSyncExternalStore.js
var notInitialized = () => {
  throw new Error("uSES not initialized!");
};

// node_modules/react-redux/es/hooks/useSelector.js
var useSyncExternalStoreWithSelector = notInitialized;
var initializeUseSelector = (fn) => {
  useSyncExternalStoreWithSelector = fn;
};
var refEquality = (a, b) => a === b;
function createSelectorHook(context = ReactReduxContext) {
  const useReduxContext2 = context === ReactReduxContext ? useReduxContext : () => (0, import_react.useContext)(context);
  return function useSelector2(selector, equalityFn = refEquality) {
    if (true) {
      if (!selector) {
        throw new Error(`You must pass a selector to useSelector`);
      }
      if (typeof selector !== "function") {
        throw new Error(`You must pass a function as a selector to useSelector`);
      }
      if (typeof equalityFn !== "function") {
        throw new Error(`You must pass a function as an equality function to useSelector`);
      }
    }
    const {
      store,
      subscription,
      getServerState
    } = useReduxContext2();
    const selectedState = useSyncExternalStoreWithSelector(subscription.addNestedSub, store.getState, getServerState || store.getState, selector, equalityFn);
    (0, import_react.useDebugValue)(selectedState);
    return selectedState;
  };
}
var useSelector = createSelectorHook();

export {
  notInitialized,
  initializeUseSelector,
  createSelectorHook,
  useSelector
};
//# sourceMappingURL=chunk-HDU35OV3.js.map
